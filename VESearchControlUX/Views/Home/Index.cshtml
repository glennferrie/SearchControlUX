@{
    ViewBag.Title = "Search Control - Prototype";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .controlContainer { margin-left: 100px; margin-top: 50px; }
    .SearchControl { border: 1px solid black; padding: 2px; width: 350px; }
    .searchInputControls span { vertical-align: middle; }
    .searchInputControls input[type="text"] { border: 1px solid black; height: 24px; width:225px; margin-top:1px; vertical-align: middle; }
    .searchInputControls input[type="button"] { border: 1px solid black; height: 28px; margin-top: 1px; vertical-align: middle; }
    .resultsContainer {  }
    .searchResults {  }
    ul { overflow: auto; max-height: 400px; }
    li { list-style: none; margin-left: -26px; padding-left: 0px; }
</style>
<script src="../../Scripts/jquery-1.5.2.js" type="text/javascript"></script>
<script src="../../Scripts/rx.min.js" type="text/javascript"></script>
<script src="../../Scripts/rx.time.min.js" type="text/javascript"></script>
<script src="../../Scripts/rx.jquery.min.js" type="text/javascript"></script>
<script src="../../Scripts/rx.html.js" type="text/javascript"></script>
<script src="../../Scripts/knockout-2.1.0.js" type="text/javascript"></script>
<script type="text/javascript">
    var SearchViewModel = function (items) {
        this.results = ko.observableArray(items);
        this.addResult = function (item) {
            this.results.push(item);
        }
    };
</script>

<script type="text/javascript">
    var sd = {
        viewModel: new SearchViewModel([{Title:"Please enter a search query."}]),
        search: function (query) {
            $.ajaxSetup({
                accept: 'application/json'
            });
            $.ajax({
                url: '@Url.Action("Search")',
                type: 'POST',
                data: { q: query, filters: ['all'] },
                success: function (data) {
                    sd.ui.bindResults(data);
                }
            });
        },
        ui: {
            bindResults: function (data) {
                $(".searchResults").empty();
                $(data).each(function (index, el) {
                    //$(".searchResults").append("<li><div><div>" + el.Title + "</div><div>" + el.Description + "</div></div></li>");
                    sd.viewModel.addResult(el);
                });

            }
        }
    };
</script>

<script type="text/javascript">
    $(document).ready(function () {
        // define template
        // $.template("result1", "<li>${ Title }</li>");
        // TODO: do something with templates/

        ko.applyBindings(sd.viewModel);

        // observe keyup on search control
        var el = document.getElementById('searchQuery');
        var o = Rx.Observable.fromEvent(el, "keyup").throttle(400);

        o.subscribe(function (ev) {
            var q = "";
            if (ev.currentTarget) q = ev.currentTarget.value;
            if (ev.target) q = ev.target.value;
            sd.search(q);
        });
    });
</script>

<h2>Sample Search control for V+E Intranet</h2>

<div class="controlContainer">
    <div class="SearchControl">
        <div class="searchInputControls">
            <span>VE Info:</span> <input type="text" id="searchQuery" /> <input type="button" value="Search" />
        </div>
        <div class="resultsContainer">
            <ul class="searchResults" id="resultsList1" data-bind="foreach: results">
                <li>
                    <div>
                        <div  style="float:left; vertical-align:middle;">
                            <img src="../../Content/photo.png" width="16px" height="16px" />
                        </div>
                        <div style="margin-left:15px;">
                            <div>
                                <span data-bind="text: $data.Title"></span>
                                 - <span data-bind="text: $data.ElementType"></span>
                            </div>
                            <div>
                                <span data-bind="text: $data.Description"></span>
                            </div>
                        </div>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>

